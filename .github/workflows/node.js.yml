# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./application/${{ matrix.project }}

    strategy:
      matrix:
        node-version: [14.x]
        project: [frontend, api]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with: 
        node-version: ${{ matrix.node-version }}
        #cache: 'npm'
#        cache-dependency-path: ./application/${{ matrix.project }}/package-lock.json
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test

  custom:
    runs-on: ubuntu-latest
    needs: test
    steps:
        # checkout the repo
        - name: 'Checkout GitHub Action'
          uses: actions/checkout@main
          
        #- name: 'Login via Azure CLI'
        #  uses: azure/login@v1
        #  with:
        #    creds: "${{ secrets.AZURE_CREDENTIALS }}"       
        - name: 'Build and push image'
          uses: azure/docker-login@v1
          with:
            login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.REGISTRY_USERNAME }}
            password: ${{ secrets.REGISTRY_PASSWORD }}
        - run: |
            docker build ./application -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/booksapp:${{ github.sha }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/booksapp:${{ github.sha }}
            pwd 
            ls
